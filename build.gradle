import java.text.SimpleDateFormat

plugins {
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "1.5.0"
    id "com.adarshr.test-logger" version "3.0.0"
}

version = "1.0"
group = "com.spencercjh"

repositories {
    mavenCentral()
}

micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.spencercjh.*")
    }
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor("info.picocli:picocli-codegen")
    compileOnly 'org.projectlombok:lombok'
    implementation("info.picocli:picocli")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
    implementation("io.micronaut.picocli:micronaut-picocli")
    implementation("javax.annotation:javax.annotation-api")
    implementation("org.apache.logging.log4j:log4j-core:2.13.3")

    // https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation group: 'org.apache.poi', name: 'poi', version: '5.0.0'
    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.0.0'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'

    runtimeOnly("org.apache.logging.log4j:log4j-api:2.13.3")
    runtimeOnly("org.apache.logging.log4j:log4j-slf4j-impl:2.13.2")
    implementation("io.micronaut:micronaut-validation")
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
}


application {
    mainClass.set("com.spencercjh.DivideSquadCommand")
}
java {
    sourceCompatibility = JavaVersion.toVersion("8")
    targetCompatibility = JavaVersion.toVersion("8")
}

// reference: https://github.com/remkop/picocli/blob/5ee80a3ff1bc1d3ac0e326a6be8a1b8c06b9f50b/picocli-examples/build.gradle#L51
def generatedResources = "$buildDir/generated-resources/main"
sourceSets {
    main {
        //register an output folder on the main SourceSet:
        output.dir(generatedResources, builtBy: 'generateVersionTxt')
        //it is now a part of the 'main' classpath and will be a part of the jar
    }
}
task generateVersionTxt {
    description 'Creates a version.txt file with build info that is added to the root of the picocli-examples jar'
    doLast {
        new File(generatedResources).mkdirs()
        def generated = new File(generatedResources, "version.txt")
        generated.text = """
Version: $rootProject.version
Buildtime: ${new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())}
Application-name: $rootProject.name $project.name
"""
    }
}

